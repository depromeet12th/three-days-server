apply from: '../integration-test.gradle'
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
dependencies {

    implementation project(':data')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    //docs
    implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"

    //jwt
    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"
    //json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.7.4'

    //fcm push notification
    implementation "com.google.firebase:firebase-admin:${firebaseAdminVersion}"

    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

}

def imageName = project.hasProperty('imageName') ? imageName : "app:local"
def releaseVersion = project.hasProperty('releaseVersion') ? releaseVersion : null

task buildDockerImage {
    dependsOn bootJar

    doLast {
        exec {
            workingDir '.'
            commandLine 'docker', 'build', '-t', "${imageName}", '--build-arg', "RELEASE_VERSION=${releaseVersion}", '.'
        }
    }
}
