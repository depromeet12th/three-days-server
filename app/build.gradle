apply from: '../integration-test.gradle'
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
dependencies {

    implementation project(':data')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    //docs
    implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    //json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

}

def imageName = project.hasProperty('imageName') ? imageName : "app:local"
def releaseVersion = project.hasProperty('releaseVersion') ? releaseVersion : null
def DB_HOSTNAME = project.hasProperty('dbHostName') ? DB_HOSTNAME : null
def DB_USERNAME = project.hasProperty('dbUserName') ? DB_USERNAME : null
def DB_PASSWORD = project.hasProperty('dbPassword') ? DB_PASSWORD : null


task buildDockerImage {
    dependsOn bootJar

    doLast {
        exec {
            workingDir '.'
            commandLine 'docker', 'build', '-t', "${imageName}", '--build-arg', "RELEASE_VERSION=${releaseVersion}", '--build-arg', "DB_HOSTNAME=${DB_HOSTNAME}", '--build-arg', "DB_USERNAME=${DB_USERNAME}", '--build-arg', "DB_PASSWORD=${DB_PASSWORD}", '.'
        }
    }
}
