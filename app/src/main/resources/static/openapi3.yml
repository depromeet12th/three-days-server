openapi: 3.0.1
info:
  title: depromeet
  description: description
  version: '1.0.1'
servers:
  - url: https://api.jjaksim.com
    description: prod
  - url: http://localhost:8080
    description: local
  - url: https://1f70f9e5-cebb-4d8e-8b33-f590a74edacf.mock.pstmn.io/
    description: mock
tags:
  - name: Habit
    description: 습관
  - name: Member
    description: 유저
  - name: Habit Achievement
    description: 습관 성취
  - name: Mate
    description: 짝꿍
  - name: Record
    description: 기록
  - name: Client
    description: 사용자의 단말 정보
  - name: Notification
    description: 알림
paths:
  /api/v1/habits:
    post:
      tags:
        - Habit
      summary: 습관 생성 시 사용되는 API
      description: saveHabitAPI
      operationId: saveHabit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveHabitRequest'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    get:
      tags:
        - Habit
      summary: 모든 습관 목록을 가져오는 API
      description: 모든 habit list를 반환한다
      operationId: getHabits
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum: [ "ACTIVE", "ARCHIVED" ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HabitOverview'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}:
    get:
      tags:
        - Habit
      summary: 습관 상세정보 API (나의 기록 - 상세기록에서 특정 습관 정보 확인 시 사용, 습관 삭제 시 어떤 모달을 띄울지 판별하기 위해서도 사용합니다.)
      description: todayHabitAchievementId 가 null인 경우 오늘 수행한 기록이 없는 경우. totalAchievementCount 를 통해 그동안 수행한 기록이 있는지 판별하고, mate가 null인지 아닌지로 짝꿍 여부를 판별할 수 있습니다.
      operationId: getSingleHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    put:
      tags:
        - Habit
      summary: 습관 수정 API
      operationId: updateHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditHabitRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Habit
      summary: 습관 삭제 API
      operationId: deleteHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: NO CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}/mates:
    post:
      tags:
        - Mate
      summary: 짝꿍 생성 API
      description: 짝꿍 생성 API
      operationId: saveMate
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MateRequest'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mate'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}/mates/{mateId}:
    get:
      tags:
        - Mate
      summary: 짝꿍 상세조회 API
      operationId: getMate
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: mateId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MateResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Mate
      summary: 짝꿍 삭제 API
      operationId: deleteMate
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: mateId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: NO CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/mates:
    get:
      tags:
        - Mate
      summary: 사용자의 짝꿍 정보를 조회한다.
      operationId: getMateCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mate'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members:
    post:
      tags:
        - Member
      summary: 사용자의 소셜 회원가입/로그인을 진행한다.
      description: login/join
      operationId: saveMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Member'
                  - type: object
                    properties:
                      token:
                        $ref: '#/components/schemas/Token'
        '201':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Member'
                  - type: object
                    properties:
                      token:
                        $ref: '#/components/schemas/Token'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    get:
      tags:
        - Member
      summary: 회원 상세 정보 API
      operationId: getMember
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Member
      summary: 회원 탈퇴 API
      operationId: deleteMember
      responses:
        '204':
          description: NO CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/logout:
    post:
      tags:
        - Member
      summary: 로그아웃 API
      operationId: logoutMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identificationKey:
                  type: string
                  example: identificationKey
      responses:
        '204':
          description: NO CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/name:
    patch:
      tags:
        - Member
      summary: 닉네임 수정 API
      operationId: patchMemberName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberNameUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/consents:
    patch:
      tags:
        - Member
      summary: 알림수신여부 수정 API
      operationId: patchMemberNotificationConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberNotificationConsentUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/resource:
    patch:
      tags:
        - Member
      summary: 리소스 수정 API
      description: 멤버용 리소스를 저장하기 위한 API입니다. 전송한 키값이 기존에 존재하는 경우 새로운 값으로 덮어써지며, 새로운 키값의 경우에는 추가됩니다(리소스 오브젝트가 전체 교체되지 않습니다)
      operationId: patchMemberResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberResourceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/tokens:
    post:
      tags:
        - Member
      summary: 토큰 만료시 재발급을 위한 API
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}/achievements:
    get:
      tags:
        - Habit Achievement
      summary: 특정 습관의 성취기록을 가져오는 API (나의 기록 - 상세 기록)
      description: 나의 기록 - 상세 기록 페이지에서 달력 뷰를 구성하는데 쓰이는 API, 기간 (10-01 ~ 10-30)을 검색조건으로 입력하면, 그 기간동안의 성취 기록을 리턴합니다. 검색 조건이 없다면 모든 성취 기록을 리턴합니다.(페이징 없음)
      operationId: getHabits
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: datePeriod.to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: 2022-11-10
        - name: datePeriod.from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: 2022-11-20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HabitAchievement'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    post:
      tags:
        - Habit Achievement
      summary: 습관 성취(체크)시 사용하는 API
      operationId: saveHabitAchievement
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveHabitAchievementRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"

  /api/v1/habits/{habitId}/achievements/{habitAchievementId}:
    delete:
      tags:
        - Habit Achievement
      summary: 습관 성취 취소(체크 해제)시 사용하는 API
      operationId: deleteHabitAchievement
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: habitAchievementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/clients:
    post:
      tags:
        - Client
      summary: 클라이언트 정보 추가시 사용하는 API. fcm-token 추가 등록/갱신 시 해당 API 사용
      operationId: postClients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/records:
    get:
      tags:
        - Record
      summary: 특정 멤버의 통계 데이터를 제공한다.
      description: 기간을 설정하지 않은 경우, 멤버가 가입한 이후부터 현재까지의 모든 데이터의 통계를 가져옵니다. (페이징 없음)
      operationId: getRecords
      parameters:
        - name: datePeriod.to
          in: query
          required: false
          schema:
            type: string
            format: date
            example: 2022-11-10
        - name: datePeriod.from
          in: query
          required: false
          schema:
            type: string
            format: date
            example: 2022-11-20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/notifications:
    get:
      tags:
        - Notification
      summary: 특정 멤버의 알림 목록을 제공한다.
      description: 특정 멤버의 30일간의 알림 목록을 제공한다.
      operationId: getNotifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationHistory'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/notifications/{notificationId}/status:
    patch:
      tags:
        - Notification
      summary: 알림 읽음 상태변경 API
      description: 특정 알림의 읽음 상태를 변경한다. (읽기전 SUCCESS, 읽은 후 CHECKED)
      operationId: patchNotificationStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdateStatusRequest'
      responses:
        '204':
          description: NO CONTENT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"


security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Habit:
      required: [ habitId, memberId, title, imojiPath, dayOfWeeks, level, characterType, createAt, reward, notification ]
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeeks:
          type: array
          example: [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        reward:
          type: integer
          example: 3
        color:
          type: string
          example: pink
        status:
          type: string
          enum: [ "ACTIVE", "ARCHIVED" ]
          example: "ACTIVE"
        createAt:
          type: string
          example: "2022-11-30 21:40:18.668458"
        sequence:
          type: integer
          example: 0
        todayHabitAchievementId:
          type: integer
          example: 81
        totalAchievementCount:
          type: integer
          example: 0
        mate:
          $ref: '#/components/schemas/Mate'
        notification:
          $ref: '#/components/schemas/Notification'
    HabitAchievement:
      required: [ id, habitId, memberId, title, imojiPath, dayOfWeeks, reward, color, createAt, todayHabitAchievementId, sequence, mate ]
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        habitId:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        achievementDate:
          type: string
          format: date
          example: "2022-11-09"
        sequence:
          type: integer
          example: 1
    HabitOverview:
      required: [ habitId, memberId, title, imojiPath, dayOfWeeks, reward, color, createAt, todayHabitAchievementId, sequence, mate ]
      type: object
      properties:
        habitId:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeeks:
          type: array
          example: [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        reward:
          type: integer
          example: 0
        color:
          type: string
          example: pink
        status:
          type: string
          enum: [ "ACTIVE", "ARCHIVED" ]
          example: "ACTIVE"
        createAt:
          type: string
          example: "2022-11-30 21:40:18.668458"
        todayHabitAchievementId:
          type: integer
          example: 81
        sequence:
          type: integer
          example: 1
        mate:
          $ref: '#/components/schemas/Mate'
    SaveHabitRequest:
      required: [ title, imojiPath, dayOfWeeks, color ]
      type: object
      properties:
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        color:
          type: string
          example: "pink"
        dayOfWeeks:
          type: array
          example: [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        notification:
          $ref: '#/components/schemas/Notification'
    EditHabitRequest:
      required: [ title, imojiPath, dayOfWeeks, notification ]
      type: object
      properties:
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        color:
          type: string
          example: "pink"
        dayOfWeeks:
          type: array
          example: [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        notification:
          $ref: '#/components/schemas/Notification'
    MemberRequest:
      required: [ certificationSubject, socialToken ]
      type: object
      properties:
        certificationSubject:
          type: string
          enum: [ "GOOGLE", "KAKAO", "APPLE" ]
        socialToken:
          type: string
          example: "oauth access token"
    MemberNameUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: depromeet8manager
    NotificationUpdateStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum: [ SENDED, CHECK ]
          example: CHECK
    MemberNotificationConsentUpdateRequest:
      type: object
      properties:
        notificationConsent:
          type: boolean
          example: true
    MemberResourceRequest:
      type: object
      properties:
        resource:
          type: object
    MateRequest:
      type: object
      properties:
        title:
          type: string
          example: "짝꿍이"
        characterType:
          enum: [ "WHIP", "CARROT" ]
          example: "WHIP"
    SaveHabitAchievementRequest:
      type: object
      properties:
        achievementDate:
          type: string
          format: date
          example: "2022-11-09"
    Client:
      type: object
      properties:
        id:
          type: integer
          example: "1"
        memberId:
          type: integer
          example: "1"
        fcmToken:
          type: string
          example: "fcmToken"
        identificationKey:
          type: string
          example: "identificationKey"
    Member:
      type: object
      properties:
        id:
          type: integer
          example: "1"
        name:
          type: string
          example: "depromeet8manager"
        certificationSubject:
          type: string
          enum: [ "GOOGLE", "KAKAO", "APPLE" ]
        notificationConsent:
          type: boolean
          example: true
        resource:
          type: object
    Mate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        memberId:
          type: integer
          example: 1
        habitId:
          type: integer
          example: 1
        title:
          type: string
          example: "짝꿍이"
        level:
          type: integer
          example: 1
        characterType:
          enum: [ "WHIP", "CARROT" ]
          example: "WHIP"
        bubble:
          type: string
          example: "오늘도 열심히 하쟈"
        levelUpAt:
          type: string
          format: date-time
          example: "2022-11-30 21:40:18.668458"
        createAt:
          type: string
          format: date-time
          example: "2022-11-30 21:40:18.668458"
    MateResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        memberId:
          type: integer
          example: 1
        habitId:
          type: integer
          example: 1
        title:
          type: string
          example: "짝꿍이"
        level:
          type: integer
          example: 1
        characterType:
          enum: [ "WHIP", "CARROT" ]
          example: "WHIP"
        bubble:
          type: string
          example: "오늘도 열심히 하쟈"
        reward:
          type: integer
          example: 6
        rewardHistory:
          type: array
          items:
            properties:
              createAt:
                type: string
                format: date-time
                example: "2022-11-30 21:40:18.668458"
        levelUpSection:
          type: array
          example: [ 1,4,8,14,22 ]
        levelUpAt:
          type: string
          format: date-time
          example: "2022-11-30 21:40:18.668458"
        createAt:
          type: string
          format: date-time
          example: "2022-11-30 21:40:18.668458"
    Record:
      required: [ rewardCount, achievementCount, frequentHabit ]
      properties:
        rewardCount:
          type: integer
          format: int64
          example: 4
        achievementCount:
          type: integer
          format: int64
          example: 36
        frequentHabit:
          $ref: '#/components/schemas/RecordHabitResponse'
    RecordHabitResponse:
      required: [ id, memberId, title, imojiPath, dayOfWeeks, createAt ]
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeeks:
          type: array
          example: [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        color:
          type: string
          example: pink
        achievementCount:
          type: integer
          format: int64
          example: 12
        createAt:
          type: string
          example: "2022-11-30 21:40:18.668458"
    Notification:
      type: object
      nullable: true
      properties:
        notificationTime:
          type: string
          example: "21:40:18"
        contents:
          type: string
          example: "빨리 물 마셔!"
    ApiResponse:
      type: object
      xml:
        name: '##default'
    ApiFailureResponse:
      type: object
      properties:
        code:
          type: string
          example: bad.request
        message:
          type: string
          example: "id 컬럼은 숫자여야만 합니다."
      xml:
        name: '##default'
    Token:
      type: object
      properties:
        accessToken:
          type: string
          example: accessToken
        refreshToken:
          type: string
          example: refreshToken
    ClientRequest:
      type: object
      properties:
        fcmToken:
          type: string
          example: fcmToken
        identificationKey:
          type: string
          example: identificationKey
    NotificationHistory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        memberId:
          type: integer
          example: 1
        notificationId:
          type: integer
          example: 1
        contents:
          type: string
          example: 짝심삼일 ver.2 출시
        status:
          type: string
          enum: [ "SUCCESS", "CHECKED" ]
        type:
          type: string
          enum: [ "GLOBAL", "HABIT" ]
        createAt:
          type: string
          format: date-time
          example: "2022-11-30 21:40:18.668458"
