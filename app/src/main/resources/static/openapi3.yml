openapi: 3.0.1
info:
  title: depromeet
  description: description
  version: '1.0.0'
servers:
  - url: http://localhost:8085
    description: local
tags:
  - name: Habit
    description: 습관
  - name: Member
    description: 유저
  - name: Habit Achievement
    description: 습관 성취
  - name: Mate
    description: 짝꿍
paths:
  /api/v1/habits:
    post:
      tags:
        - Habit
      summary: 습관 생성 시 사용되는 API
      description: saveHabitAPI
      operationId: saveHabit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveHabitRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    get:
      tags:
        - Habit
      summary: 모든 습관 목록을 가져오는 API
      description: 모든 habit list를 반환한다
      operationId: getHabits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HabitProjection'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}:
    get:
      tags:
        - Habit
      summary: 습관 상세정보 API
      operationId: getSingleHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    put:
      tags:
        - Habit
      summary: 습관 수정 API
      operationId: updateHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditHabitRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Habit
      summary: 습관 삭제 API
      operationId: deleteHabit
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}/mates:
    get:
      tags:
        - Mate
      summary: 짝궁 상세조회 API
      operationId: getMate
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mate'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    post:
      tags:
        - Mate
      summary: 짝궁 생성 API
      description: 짝궁 생성 API
      operationId: saveMate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MateRequest'
        required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              description: accessToken
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mate'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Mate
      summary: 짝꿍 삭제 API
      operationId: deleteMate
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members:
    post:
      tags:
        - Member
      summary: 사용자의 소셜 회원가입/로그인을 진행한다.
      description: login/join
      operationId: saveMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
        required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              description: accessToken
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/{memberId}:
    get:
      tags:
        - Member
      summary: 회원 상세 정보 API
      operationId: getMember
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Member
      summary: 회원 탈퇴 API
      operationId: deleteMember
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    patch:
      tags:
        - Member
      summary: 닉네임 수정 API
      operationId: patchMemberName
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberNameUpdateRequest'
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              description: accessToken
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/{memberId}/clients:
    post:
      tags:
        - Member
      summary: 클라이언트 정보 추가시 사용하는 API. fcm-token 추가 등록/갱신 시 해당 API 사용
      operationId: postClients
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
    delete:
      tags:
        - Member
      summary: 로그아웃시 사용하는 API 해당 기기에 대한 정보를 삭제합니다.
      operationId: deleteClients
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/members/tokens:
    post:
      tags:
        - Member
      summary: 토큰 만료시 재발급을 위한 API
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
  /api/v1/habits/{habitId}/achievements:
    post:
      tags:
        - Habit Achievement
      summary: 습관 성취(체크)시 사용하는 API
      operationId: saveHabitAchievement
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitAchievementRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "invalid.id"
                  message: "id는 숫자여야만 합니다."
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"

  /api/v1/habits/{habitId}/achievements/{habitAchievementId}:
    delete:
      tags:
        - Habit Achievement
      summary: 습관 성취 취소(체크 해제)시 사용하는 API
      operationId: deleteHabitAchievement
      parameters:
        - name: habitId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: habitAchievementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFailureResponse'
              example:
                - code: "uncaught error"
                  message: "서버 에러"
security:
  - bearerAuth: [ token ]

components:
  securitySchemes:
    token:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Habit:
      required: [ habitId, memberId, title, imojiPath, dayOfWeeks, level, characterType, createdDate, reward, notification ]
      type: object
      properties:
        habitId:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeeks:
          type: array
          example: [ "MON", "TUE", "FRI" ]
        reward:
          type: integer
          example: 3
        createdDate:
          type: string
          example: "2022-10-15T10:30:00.000"
        habitAchievement:
          $ref: '#/components/schemas/HabitAchievement'
        mate:
          $ref: '#/components/schemas/Mate'
        notification:
          type: object
          properties:
            notificationId:
              type: integer
              format: int64
              example: 1
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
            contents:
              type: string
              example: "아침 9시면 일어나야해요"
    HabitProjection:
      required: [ habitId, memberId, title, imojiPath, dayOfWeeks, level, characterType, createdDate, reward ]
      type: object
      properties:
        habitId:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeeks:
          type: array
          example: [ "MON", "TUE", "FRI" ]
        createdDate:
          type: string
          example: "2022-10-15T10:30:00.000"
        reward:
          type: integer
          example: 0
        color:
          type: string
          example: pink
        mate:
          $ref: '#/components/schemas/Mate'
        habitAchievement:
          type: object
          properties:
            habitAchievementId:
              type: integer
              format: int64
              example: 1
            sequence:
              type: integer
              format: int64
              example: 0
    SaveHabitRequest:
      required: [ title, imojiPath, dayOfWeeks, notification, color ]
      type: object
      properties:
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        color:
          type: string
          example: "pink"
        dayOfWeeks:
          type: array
          example: [ "MON", "TUE", "FRI" ]
        notification:
          type: object
          properties:
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
            contents:
              type: string
              example: "일어났니? 양치하고 얼른 물 마셔"
    EditHabitRequest:
      required: [ habitId, title, imojiPath, dayOfWeek, notification ]
      type: object
      properties:
        habitId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        imojiPath:
          type: string
          example: "imojiString"
        dayOfWeek:
          type: array
          example: [ "MON", "TUE" ]
        notification:
          type: object
          properties:
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
            contents:
              type: string
              example: "일어났니? 양치하고 얼른 물 마셔"
    MemberRequest:
      required: [ certificationSubject, accessToken ]
      type: object
      properties:
        certificationSubject:
          type: string
          enum: [ "GOOGLE", "KAKAO", "APPLE" ]
        oAuthAccessToken:
          type: string
          example: "oAuthAccessToken"
    MemberNameUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: depromeet8manager
    MateRequest:
      type: object
      properties:
        characterType:
          type: string
          example: pig
    HabitAchievementRequest:
      type: object
      properties:
        achievementDate:
          type: string
          format: date
          example: "2022-11-09"
    HabitAchievement:
      required: [ habitAchievementId, sequence, achievementDate, nextAchievementDate ]
      type: object
      properties:
        habitAchievementId:
          type: integer
          example: 1
        sequence:
          type: integer
          example: 1
        achievementDate:
          type: string
          format: date
          example: "2022-11-07"
        nextAchievementDate:
          type: string
          format: date
          example: "2022-11-08"
    LoginResponse:
      type: object
      properties:
        memberId:
          type: integer
          example: "1"
        name:
          type: string
          example: "depromeet8manager"
        isNew:
          type: boolean
          example: true
        token:
          $ref: '#/components/schemas/Token'

    Member:
      type: object
      properties:
        memberId:
          type: integer
          example: "1"
        name:
          type: string
          example: "depromeet8manager"
        certificationSubject:
          type: string
          enum: [ "GOOGLE", "KAKAO", "APPLE" ]
        fcmTokens:
          type: array
          example:
            - [ "fcmToken1", "fcmToken2" ]
        agreements:
          $ref: '#/components/schemas/Agreement'
    Mate:
      type: object
      properties:
        mateId:
          type: integer
          example: 1
        level:
          type: integer
          example: 1
        characterType:
          type: string
          example: pig
        createDate:
          type: string
          format: date-time
          example: 2022-10-10 12:34:56.789789
    ApiResponse:
      type: object
      xml:
        name: '##default'
    ApiFailureResponse:
      type: object
      properties:
        code:
          type: string
          example: bad.request
        message:
          type: string
          example: "id 컬럼은 숫자여야만 합니다."
      xml:
        name: '##default'
    Token:
      type: object
      properties:
        accessToken:
          type: string
          example: accessToken
        refreshToken:
          type: string
          example: refreshToken
    Client:
      type: object
      properties:
        fcmToken:
          type: string
          example: fcmToken
        identificationKey:
          type: string
          example: identificationKey
    Agreement:
      type: object
      properties:
        notificationConsent:
          type: boolean
          example: true
