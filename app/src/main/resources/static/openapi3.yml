openapi: 3.0.1
info:
  title: depromeet
  description: description
  version: '1.0.0'
servers:
  - url: http://localhost:8085
    description: local
tags:
  - name: Objective
    description: 목표
paths:
  /api/v1/objectives:
    post:
      tags:
        - Objective
      summary: save objective
      description: saveObjectiveAPI
      operationId: saveObjective
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostObjectiveCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ApiFailureResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
    get:
      tags:
        - Objective
      summary: get objective list
      description: 모든 objective list를 반환한다
      operationId: getObjectives
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objective'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
  /api/v1/objectives/{objectiveId}:
    get:
      tags:
        - Objective
      summary: get single objective
      operationId: getSingleObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
    put:
      tags:
        - Objective
      summary: update objective
      operationId: updateObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutObjectiveCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400ApiFailureResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
    patch:
      tags:
        - Objective
      summary: update objective last achievement date
      description: 목표 달성시 클라이언트 기준 오늘 날짜, 취소시 null 전송
      operationId: updateLastAchievementDate
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObjectiveCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
    delete:
      tags:
        - Objective
      summary: delete objective
      operationId: deleteObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500ApiFailureResponse'
components:
  schemas:
    Objective:
      type: object
      properties:
        objectiveId:
          type: integer
          format: int64
          example: 1
        memberId:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "물을 마시자"
        startDate:
          type: string
          format: date
          example: "2022-10-15"
        endDate:
          type: string
          format: date
          example: "2022-10-17"
        startTime:
          type: string
          format: time
          example: "10:30:00"
        endTime:
          type: string
          format: time
          example: "10:30:00"
        status:
          type: string
          enum:
            - ACTIVATE
            - DEACTIVATE
            - DONE
          example: "ACTIVATE"
        createDate:
          type: string
          example: "2022-10-15T10:30:00.000"
        sequence:
          type: integer
          format: int64
          example: 0
        lastAchievementDate:
          type: string
          format: date
          example: "2022-10-15"
        achievementCount:
          type: integer
          format: int64
          example: 5
        notification:
          type: object
          properties:
            notificationId:
              type: integer
              format: int64
              example: 1
            objectiveId:
              type: integer
              format: int64
              example: 1
            memberId:
              type: integer
              format: int64
              example: 1
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
    PostObjectiveCommand:
      required: [ title, startDate, endDate, startTime, endTime, notification ]
      type: object
      properties:
        title:
          type: string
          example: "물을 마시자"
        startDate:
          type: string
          format: date
          example: "2022-10-14"
        endDate:
          type: string
          format: date
          example: "2022-10-15"
        startTime:
          type: string
          format: time
          example: "10:00:00"
        endTime:
          type: string
          format: time
          example: "10:30:00"
        notification:
          type: object
          properties:
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
            contents:
              type: string
              example: "일어났니? 양치하고 얼른 물 마셔"
    PutObjectiveCommand:
      required: [ objectiveId, memberId, title, startDate, endDate, startTime, endTime, notification  ]
      type: object
      properties:
        objectiveId:
          type: integer
          example: 1
        memberId:
          type: integer
          example: 1
        title:
          type: string
          example: "물을 마시자"
        startDate:
          type: string
          format: date
          example: "2022-10-14"
        endDate:
          type: string
          format: date
          example: "2022-10-15"
        startTime:
          type: string
          format: time
          example: "10:00:00"
        endTime:
          type: string
          format: time
          example: "10:30:00"
        notification:
          type: object
          properties:
            notificationId:
              type: integer
              example: 1
            objectiveId:
              type: integer
              example: 1
            memberId:
              type: integer
              example: 1
            notificationTime:
              type: string
              format: time
              example: "10:30:00"
            contents:
              type: string
              example: "일어났니? 양치하고 얼른 물 마셔"
    PatchObjectiveCommand:
      required: [lastAchievementDate]
      type: object
      properties:
        lastAchievementDate:
          type: string
          format: date
          example: "2022-10-15"
    ApiResponse:
      type: object
      xml:
        name: '##default'
    400ApiFailureResponse:
      type: object
      properties:
        code:
          type: string
          example: bad.request
        message:
          type: string
          example: "id 컬럼은 숫자여야만 합니다."
    500ApiFailureResponse:
      type: object
      properties:
        code:
          type: string
          example: invalid.objective
        message:
          type: string
          example: "서버 에러"
      xml:
        name: '##default'