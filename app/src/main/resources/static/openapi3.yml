openapi: 3.0.1
info:
  title: depromeet
  description: description
  version: '1.0.0'
servers:
  - url: http://localhost:8085
    description: local
tags:
  - name: Member
    description: 사용자
  - name: Objective
    description: 목표
paths:
  /api/v1/members:
    post:
      tags:
        - Member
      summary: save member
      description: saveMemberAPI
      operationId: saveMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveMemberCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
  /api/v1/members/{id}:
    get:
      tags:
        - Member
      operationId: findUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
  /api/v1/objectives:
    post:
      tags:
        - Objective
      summary: save objective
      description: saveObjectiveAPI
      operationId: saveObjective
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveObjectiveCommand'
            example:
              member_id: 1
              title: "물을마시자"
              start_date: "2022-10-14"
              end_date: "2022-10-15"
              start_time: "10:00:00"
              end_time: "10:30:00"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
    get:
      tags:
        - Objective
      summary: get objective list
      description: 모든 objective list를 반환한다
      operationId: getObjectives
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
  /api/v1/objectives/members/{memberId}:
    get:
      tags:
        - Objective
      summary: get objective list by memberId
      description: 해당 멤버의 모든 objective list를 반환한다.
      operationId: getObjectiveByMemberId
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
  /api/v1/objectives/{objectiveId}:
    patch:
      tags:
        - Objective
      summary: update objective
      description: memberId는 인증 기능 개발 후 설정 예정입니다.
      operationId: updateObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectiveCommand'
            example:
              title: "물을마시자"
              start_date: "2022-10-14"
              end_date: "2022-10-15"
              start_time: "10:00:00"
              end_time: "10:30:00"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
    delete:
      tags:
        - Objective
      summary: delete objective
      description: memberId는 인증 기능 개발 후 설정 예정입니다.
      operationId: updateObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: BAD REQUEST
        '404':
          description: NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR
components:
  schemas:
    Objective:
      type: object
      properties:
        objectiveId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        title:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        status:
          type: string
        create_date:
          type: string
        sequence:
          type: string
        last_achievement_date:
          type: string
    SaveMemberCommand:
      required: [ nickname ]
      type: object
      properties:
        nickname:
          type: string
    Member:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        nickname:
          type: string
    SaveObjectiveCommand:
      required: [ member_id, title ]
      type: object
      properties:
        member_id:
          type: integer
          format: int64
        title:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        start_time:
          type: string
        end_time:
          type: string
    UpdateObjectiveCommand:
      type: object
      properties:
        title:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        start_time:
          type: string
        end_time:
          type: string
    BaseResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
